/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.jpademo;

import java.util.Iterator;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;

public class App {
    public static void main(String[] args) {
        Employee employee = new Employee();
        Customer customer = new Customer();
        employee.setEmpId(2);
        employee.setEmpName("Ramesh");
        customer.setCustomerName("Simran");
        customer.setCustomerSecretCode("abcdef");
        
    	EntityManagerFactory emf = Persistence.createEntityManagerFactory("jpademo");
        EntityManager em = emf.createEntityManager();
        //Insert data in database using persist method
        /**
        em.getTransaction().begin();
        em.persist(customer);
        em.getTransaction().commit();
        
        em.getTransaction().begin();
        em.persist(employee);
        em.getTransaction().commit();
        **/
        //Retrieve data from database
        em.getTransaction().begin();
        Employee emp =	em.find(Employee.class, 1);
        System.out.println("**********"+emp.getEmpName()+"**********");
        Customer cust = em.find(Customer.class, 3);
        System.out.println("**********"+cust+"**********");
        em.getTransaction().commit();
        
        /**
        //Remove data from database
        em.getTransaction().begin();
        em.remove(cust);
        em.getTransaction().commit();
        
        em.getTransaction().begin();
        Customer cus = em.find(Customer.class, 2);
        System.out.println("***After removing*******"+cus+"**********");
        em.getTransaction().commit();
        **/
        //Update the entity or record
        em.getTransaction().begin();
        employee.setEmpName("Parag Agrawal");
        em.merge(employee);
        em.getTransaction().commit();
        
        //Retrieve all customer
        em.getTransaction().begin();
        Query q = em.createNativeQuery("select * from customer where customername='Rajesh'");
        List<Customer> customers = q.getResultList();
        /**
        Iterator itr = customers.iterator();
        while(itr.hasNext()) {
        	System.out.println("-*****-"+(itr.next()).toString());
        }**/
        for(Object cus:customers) {
        	System.out.println(cus);
        }
        em.getTransaction().commit();
    }
}
